{"version":3,"sources":["hooks/useVideoPermissions.ts","hooks/state.ts","config.ts","hooks/useModel.ts","hooks/useTensorflow.ts","model/util.ts","hooks/useWebcam.tsx","hooks/useVideoStreams.ts","components/util.ts","components/CodeSnippet.tsx","components/StyledSelect.tsx","components/StyledSwitch.tsx","components/Header.tsx","components/CirclesSVG.tsx","components/SelectInputStream.tsx","views/HomeView.tsx","hooks/usePredictions.ts","views/DefaultView.tsx","hooks/useTimer.ts","routes/HomeRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PermissionsState","state","backend","maxFaces","config","NUM_SEGMENTS","VISIBILITY_RATE","CONFIDENCE_RATE","MIN_POSITION","MAX_POSITION","IMAGE_SIZE","EXTEND","index","silhouette","lipsUpperOuter","rightEyebrowUpper","leftEyebrowUpper","rightEyeLower0","leftEyeLower0","nose","s3url","timerLimit","useModel","tfReady","useState","setTfReady","useEffect","tfjsWasm","tf","then","useTensorflow","model","setModel","faceLandmarksDetection","mediapipeFacemesh","detectionConfidence","x","selectItems","array","Object","keys","reduce","value","key","pts","map","i","source","mlMatrix","entryModelBase","isClose","y","rtol","atol","Math","abs","radiansToDegrees","radians","PI","getAngles","target","rotation","eps","source_mean","mean","target_mean","subRowVector","source_std","standardDeviation","target_std","div","transpose","covariance","mmul","svd","u","leftSingularVectors","v","rightSingularVectors","getRotationMatrix","z","get","atan2","asin","cos","yaw","pitch","roll","rotationMatrixToEulerAngles","useWebcam","mirrored","activeDeviceId","videoInputs","setVideoInputs","gotStreams","setGotStreams","getVideoInputs","a","navigator","mediaDevices","enumerateDevices","allDevives","filter","kind","useVideoStreams","streamLoaded","setStreamLoaded","webcamElement","setWebcamElement","webcamRef","useRef","updateWebcamElement","ref","forceScreenshotSourceSize","screenshotFormat","videoConstraints","deviceId","exact","undefined","onUserMedia","className","classNames","classes","Boolean","join","CodeSnippet","text","onClick","clipboard","writeText","StyledSelect","items","renderF","keyF","onChange","label","disabled","selected","setSelected","options","Option","active","Label","Button","as","Fragment","leave","leaveFrom","leaveTo","Options","StyledSwitch","defaultEnabled","size","padding","children","enabled","setEnabled","checked","style","height","width","Header","CirclesSVG","numberSegments","strokes","circleRadius","circleX","circleY","initialRotation","dashArray","dashOffset","circles","finalRotation","push","cx","cy","r","strokeWidth","strokeDashoffset","strokeDasharray","stroke","fill","transform","version","xmlns","SelectInputStream","inputs","setSelectedInput","item","HomeView","startedHook","taskDoneHook","containerRef","canvasRef","userReady","setUserReady","setMirrored","setActiveDeviceId","calcPrediction","input","current","video","estimateFaces","returnTensors","flipHorizontal","predictIrises","predictions","length","confidence","faceInViewConfidence","keypoints","scaledMesh","boundingBox","keypointsReduced","angles","usePredictions","segmentsRef","boarders","Map","step","start","end","set","circleSegments","setStrokes","frameCount","setFrameCount","ts","setTs","startedRecording","setStartedRecording","stoppedRecording","setStoppedRecording","mediaRecorder","setMediaRecorder","recordedBlobs","setRecordedBlobs","blobsUploading","setBlobsUploading","blobsUploaded","setBlobsUploaded","setBlobsUploadError","location","useLocation","URLSearchParams","search","updateCircleProps","prediction","segments","norm","sqrt","xNorm","yNorm","poseAngle","forEach","downloadVideo","blob","Blob","type","fetch","method","body","headers","resp","catch","err","updatePredictions","res","prev","Date","now","Array","from","values","every","requestAnimationFrame","setTimeout","MediaRecorder","stream","mimeType","stop","addEventListener","e","data","btoa","atob","getCanvas","videoRatio","containerW","offsetWidth","containerH","webcamSize","marginLeft","marginTop","JSON","stringify","offsetHeight","round","DefaultView","permissions","Loading","setPermissions","NoResponse","getUserMedia","Success","console","log","Denied","useVideoPermissions","seconds","timerStarted","setTimerStarted","timedOut","setTimedOut","timer","setTimer","timeStarted","setTimeStarted","clearTimeout","window","startTimer","timeLeft","useTimer","taskDone","setTaskDone","animation","HomeRoute","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c521c8c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport enum PermissionsState {\n    Loading,\n    NoResponse,\n    Success,\n    Denied\n};\n\nexport const useVideoPermissions = () => {\n    const [ permissions, setPermissions ] = useState(PermissionsState.Loading);\n    \n    useEffect(() => {\n        setPermissions(PermissionsState.NoResponse);\n        navigator.mediaDevices.getUserMedia({ video: true })\n            .then(res => {\n                setPermissions(PermissionsState.Success);\n            })\n            .catch(err => {\n                console.log(err);\n                setPermissions(PermissionsState.Denied);\n            });\n    }, []);\n\n    return permissions;\n};\n","const state = {\n    backend: 'wasm',\n    maxFaces: 1,\n};\n\nexport default state;\n","const config = {\n    NUM_SEGMENTS: 32,\n    VISIBILITY_RATE: 0.4,\n    CONFIDENCE_RATE: 0.95,\n    MIN_POSITION: 10,\n    MAX_POSITION: 30,\n    IMAGE_SIZE: 300,\n    EXTEND: 1.5,\n    index: {\n        silhouette: [\n            454, 323, 361, 288, 397, 365, 379, 378, 400, 377, 152,\n            148, 176, 149, 150, 136, 172, 58, 132, 93, 234\n        ],\n        lipsUpperOuter: [61, 40, 39, 37, 0, 267, 269, 270, 291],\n        rightEyebrowUpper: [156, 70, 63, 105, 66, 107, 55, 193],\n        leftEyebrowUpper: [383, 300, 293, 334, 296, 336, 285, 417],\n        rightEyeLower0: [33, 144, 153, 133],\n        leftEyeLower0: [263, 373, 380, 362],\n        nose: [4, 5, 195, 197, 6, 8],\n    },\n    s3url: 'https://storage.yandexcloud.net/toloka-open/video',\n    timerLimit: 20,\n};\n\nexport default config;\n","import { useState, useEffect } from 'react';\nimport * as faceLandmarksDetection from '@tensorflow-models/face-landmarks-detection';\nimport { MediaPipeFaceMesh } from '@tensorflow-models/face-landmarks-detection/dist/mediapipe-facemesh';\nimport { useTensorflow } from './useTensorflow'; \nimport config from '../config';\nimport state from './state';\n\nexport const useModel = () => {\n    const tfReady = useTensorflow();\n    const [ model, setModel ] = useState<MediaPipeFaceMesh | null>(null);\n\n    useEffect(() => {\n        if (!tfReady)\n            return;\n        \n        faceLandmarksDetection.load(\n            faceLandmarksDetection.SupportedPackages.mediapipeFacemesh,\n            {\n                maxFaces: state.maxFaces,\n                detectionConfidence: config.CONFIDENCE_RATE\n            }\n        ).then((x) => {\n            setModel(x);\n        });\n    }, [tfReady]);\n\n    return model;\n}","import { useState, useEffect } from 'react';\nimport * as tf from '@tensorflow/tfjs-core';\nimport * as tfjsWasm from '@tensorflow/tfjs-backend-wasm';\nimport state from './state';\n\nexport const useTensorflow = () => {\n    const [ tfReady, setTfReady ] = useState(false); \n\n    useEffect(() => {\n        tfjsWasm.setWasmPaths(\n            `https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${tfjsWasm.version_wasm}/dist/`\n        );\n\n        tf.setBackend(state.backend)\n            .then(() => {\n                setTfReady(true);\n            });\n    }, []);\n\n    return tfReady;\n}\n","import * as mlMatrix from \"ml-matrix\";\nimport entryModelBase from '../model/base.json';\nimport config from '../config';\n\ninterface IndexT {\n    [key: string]: any,\n    silhouette: number[],\n    lipsUpperOuter: number[],\n    rightEyebrowUpper: number[],\n    leftEyebrowUpper: number[],\n    rightEyeLower0: number[],\n    leftEyeLower0: number[],\n    nose: number[],\n}\n\nexport const circleSegments = (numberSegments: number) => {\n    const boarders = new Map();\n    const step = 2 * Math.PI / numberSegments;\n\n    for (let i = 0; i < numberSegments; i++) {\n        let start = i * step;\n        let end = (i + 1) * step;\n        boarders.set({ index: i, start: start, end: end }, false);\n    }\n\n    return boarders;\n};\n\nexport const selectItems = (array: number[][], index: IndexT): number[][] => {\n    const selected = Object.keys(index).reduce(\n        // @ts-ignore\n        (value, key) => {\n            // @ts-ignore\n            const pts = index[key].map(i => array[i]);\n            return [...value, ...pts];\n        }, []\n    );\n    \n    // @ts-ignore\n    return selected;\n};\n\nexport const source = new mlMatrix.Matrix(selectItems(entryModelBase, config.index));\n\nexport const getRotationMatrix = (source: mlMatrix.Matrix, target: mlMatrix.Matrix, eps = 1e-7) => {\n    let source_mean = source.mean(\"column\");\n    let target_mean = target.mean(\"column\");\n  \n    source = source.subRowVector(source_mean);\n    target = target.subRowVector(target_mean);\n  \n    let source_std = source.standardDeviation();\n    let target_std = target.standardDeviation();\n  \n    source = source.div(source_std + eps).transpose();\n    target = target.div(target_std + eps);\n  \n    let covariance = source.mmul(target);\n    let svd = new mlMatrix.SingularValueDecomposition(covariance);\n  \n    let u = svd.leftSingularVectors;\n    let v = svd.rightSingularVectors.transpose();\n  \n    let rotation = u.mmul(v);\n  \n    return rotation.transpose();\n};\n\nexport const isClose = (x: number, y: number, rtol = 1e-5, atol = 1e-8) =>\n    Math.abs(x - y) <= atol + rtol * Math.abs(y);\n\nexport const radiansToDegrees = (radians: number) => \n    radians * 180 / Math.PI;\n\nexport const rotationMatrixToEulerAngles = (rotation: mlMatrix.Matrix) => {\n    let x = 0.0\n    let y = 0.0\n    let z = 0.0\n    \n    if (isClose(rotation.get(2, 0), 1.0)) {\n        x = Math.PI / 2\n        y = Math.atan2(-rotation.get(0, 1), -rotation.get(0, 2))\n    } else if (isClose(rotation.get(2, 0), -1.0)) {\n        x = -Math.PI / 2\n        y = Math.atan2(rotation.get(0, 1), rotation.get(0, 2))\n    } else {\n        x = Math.asin(rotation.get(2, 0))\n        y = Math.atan2(\n        rotation.get(2, 1) / Math.cos(x), rotation.get(2, 2) / Math.cos(x)\n        )\n        z = Math.atan2(\n        rotation.get(1, 0) / Math.cos(x), rotation.get(0, 0) / Math.cos(x)\n        )\n    }\n    \n    return {\n        yaw: radiansToDegrees(x),\n        pitch: radiansToDegrees(y),\n        roll: radiansToDegrees(z)\n    };\n};\n\nexport const getAngles = (source: mlMatrix.Matrix, target: mlMatrix.Matrix) => {\n    const rotation = getRotationMatrix(source, target);\n    return rotationMatrixToEulerAngles(rotation);\n};\n","import { useState, useRef, useEffect } from \"react\"; \nimport Webcam from \"react-webcam\";\nimport { useVideoStreams } from \"./useVideoStreams\"; \n\nexport const useWebcam = (mirrored: boolean, activeDeviceId?: string) => {\n    const { videoInputs, gotStreams } = useVideoStreams();\n    const [ streamLoaded, setStreamLoaded ] = useState(false);\n    const [ webcamElement, setWebcamElement ] = useState<JSX.Element | null>(null);\n    const webcamRef = useRef<Webcam>(null);\n\n    const updateWebcamElement = () => {\n        setWebcamElement(<Webcam \n            ref={webcamRef}\n            forceScreenshotSourceSize\n            screenshotFormat='image/jpeg'\n            videoConstraints={{ deviceId: { exact: activeDeviceId ?? undefined } }}\n            onUserMedia={() => setStreamLoaded(true)}\n            mirrored={mirrored}\n            className=\"w-full z-0\"\n        />);\n    };\n\n    useEffect(() => {\n        if (!gotStreams)\n            return;\n        \n        updateWebcamElement();\n    }, [gotStreams]);\n\n    useEffect(() => {\n        updateWebcamElement();\n    }, [mirrored, activeDeviceId])\n\n    return {\n        videoInputs,\n        streamLoaded,\n        webcamElement,\n        webcamRef\n    };\n}\n","import { useState, useEffect } from 'react';\n\nexport const useVideoStreams = () => {\n    const [ videoInputs, setVideoInputs ] = useState<MediaDeviceInfo[]>([]);\n    const [ gotStreams, setGotStreams ] = useState(false);\n\n    const getVideoInputs = async () => {\n        const allDevives = \n            await navigator\n                .mediaDevices\n                .enumerateDevices();\n        \n        setVideoInputs(allDevives.filter(x => x.kind === 'videoinput'));\n    };\n\n    useEffect(() => {\n        getVideoInputs()\n            .then(() => {\n                setGotStreams(true);\n            });\n    }, []);\n\n    return { videoInputs, gotStreams };\n}\n","export const classNames = (...classes: string[]) =>\n    classes.filter(Boolean).join(' ');","import React from 'react';\nimport { ClipboardCopyIcon } from '@heroicons/react/solid';\nimport { classNames } from './util';\n\ninterface CodeSnippetProps {\n    text: string,\n    className?: string,\n}\n\nexport const CodeSnippet: React.FC<CodeSnippetProps> = ({\n    text, className\n}) => {\n    return (\n        <span className={classNames(\n            className ?? \"\",\n            \"font-mono bg-gray-200 p-1 text-gray-600 rounded\"\n        )}> \n            {text}\n            <ClipboardCopyIcon \n                className=\"ml-1 w-4 h-4 inline cursor-pointer hover:text-gray-800\"\n                onClick={() => {\n                    navigator.clipboard.writeText(text);\n                }}\n            />\n        </span>\n    );\n}\n","import React, { useState, useEffect, PropsWithChildren, Fragment } from 'react';\nimport { Listbox, Transition } from '@headlessui/react';\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid';\nimport { classNames } from './util';\n\ninterface StyledSelectProps<T> {\n    items: T[],\n    renderF: (item: T, selected: boolean) => JSX.Element,\n    keyF: (item: T) => string,\n    onChange?: (item: T) => void,\n    label?: JSX.Element,\n    disabled?: boolean\n};\n\nexport const StyledSelect = <T,>({\n    items, renderF, keyF, onChange, label, disabled\n}: PropsWithChildren<StyledSelectProps<T>>) => {\n    const [ selected, setSelected ] = useState<T>(items[0]);\n\n    useEffect(() => {\n        onChange && onChange(selected);\n    }, [selected]);\n\n    const options = items.map(x => (\n        <Listbox.Option \n            key={keyF(x)}\n            value={x}\n            className={({ active }) => \n                classNames(\n                    active ? 'text-white bg-indigo-600' : 'text-gray-900 dark:text-gray-200',\n                    'cursor-default select-none relative py-2 pl-3 pr-9'\n                )\n            }\n        >\n            { ({ selected, active }) => <>\n                <div className=\"flex items-center\">\n                    {renderF(x, selected)}\n                </div>\n\n                { selected\n                    ? \n                        <span\n                            className={classNames(\n                                active ? 'text-white' : 'text-indigo-600',\n                                'absolute inset-y-0 right-0 flex items-center pr-4'\n                            )}\n                        >\n                            <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                        </span>\n                    : <> </>\n                }\n            </>}\n        </Listbox.Option>\n    ));\n\n    return (\n        <Listbox value={selected} onChange={setSelected} disabled={disabled ?? false}>\n            { label  \n                ? <Listbox.Label className=\"block text-sm font-medium text-gray-700 dark:text-gray-100\"> {label} </Listbox.Label>\n                : <></>\n            }\n\n            <div className=\"mt-1 relative\">\n                <Listbox.Button className=\"\n                    relative w-full bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 \n                    rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default \n                    focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 \n                    sm:text-sm\n                \">\n                    <span className=\"flex items-center\">\n                        {renderF(selected, false)}\n                    </span>\n                    <span className=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                        <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    </span>\n                </Listbox.Button>\n\n                <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                    <Listbox.Options className=\"\n                        absolute z-10 mt-1 w-full bg-white dark:bg-gray-700 shadow-lg max-h-56 rounded-md \n                        py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto\n                        focus:outline-none sm:text-sm\n                    \">\n                        { options }\n                    </Listbox.Options>\n                </Transition>\n            </div>\n        </Listbox>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { Switch } from '@headlessui/react';\n\ninterface StyledSwtichProps {\n    onChange?: (enabled: boolean) => void,\n    defaultEnabled?: boolean,\n    size?: number,\n    padding?: number,\n    disabled?: boolean\n}\n\nexport const StyledSwitch: React.FC<StyledSwtichProps> = (\n    { defaultEnabled, onChange, size, padding, children, disabled }\n) => {\n    const [ enabled, setEnabled ] = useState(defaultEnabled ?? false);\n\n    useEffect(() => {\n        onChange && onChange(enabled);\n    }, [enabled]);\n\n    return (\n        <Switch\n        checked={enabled}\n        onChange={setEnabled}\n        className={`\n            ${enabled ? 'bg-indigo-500' : 'bg-gray-200 dark:bg-gray-500'}\n            relative inline-flex flex-shrink-0\n            border-2 border-transparent rounded-full cursor-pointer \n            transition-colors ease-in-out duration-200 focus:outline-none \n            focus-visible:ring-2  focus-visible:ring-white focus-visible:ring-opacity-75\n            Switch\n        `}\n        style={{\n            height: `${(size ?? 34) + (padding ?? 2) * 2}px`,\n            width: `${(size ?? 34) * 2 + (padding ?? 2) * 3}px`\n        }}\n        disabled={disabled ?? false}\n        >\n            <span\n            aria-hidden=\"true\"\n            className={`\n                pointer-events-none inline-block\n                rounded-full bg-white shadow-lg transform ring-0 \n                transition ease-in-out duration-200\n            `}\n            style={{\n                height: `${size ?? 34}px`,\n                width: `${size ?? 34}px`,\n                // @ts-ignore\n                '--tw-translate-x': `${enabled ? (size ?? 34) + (padding ?? 2) : 0}px`\n            }}\n            >\n                {children}\n            </span>\n        </Switch>\n    );\n}","import React from 'react';\n\ninterface HeaderProps {\n    size: string,\n    className?: string\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n    size, children, className\n}) => (\n    <span className={`Header font-semibold tracking-tight text-${size} ` + (className || \"\")}>\n        { children }\n    </span>\n)","import React from 'react';\n\n\ninterface CirclesSVGProps {\n    numberSegments: number,\n    strokes: string[],\n    size: number\n}\n\nexport const CirclesSVG: React.FC<CirclesSVGProps> = ({\n    numberSegments, strokes, size\n}) => {\n    const circleRadius = size / 2 - 30;\n    const circleX = size / 2;\n    const circleY = size / 2;\n    const initialRotation = 360 / numberSegments;\n\n    const dashArray = 2 * Math.PI * circleRadius;\n    const dashOffset = dashArray * (1 - 1 / numberSegments);\n\n    let circles = [];\n    for (let i = 0; i < numberSegments; i++) {\n        const finalRotation = i * initialRotation + 90;\n    \n        // console.log(strokes[i]);\n        circles.push(\n            <circle \n                cx={circleX}\n                cy={circleY}\n                r={circleRadius}\n                strokeWidth=\"20\"\n                strokeDashoffset={dashOffset}\n                strokeDasharray={dashArray}\n                stroke={strokes[i] ?? \"none\"}\n                fill=\"transparent\"\n                transform={`rotate(${finalRotation} ${circleX} ${circleY})`}\n            />\n        );\n    }\n\n    return (\n        <svg height={size} width={size} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n            {/* <circle cx=\"150\" cy=\"150\" r=\"120\" stroke=\"green\" stroke-width=\"20\" fill=\"transparent\" /> */}\n            {circles}\n        </svg>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { classNames } from './util';\nimport { StyledSelect } from './StyledSelect';\nimport { Header } from './Header';\n\ninterface SelectInputStreamProps {\n    inputs: MediaDeviceInfo[],\n    setSelectedInput: (input: MediaDeviceInfo) => void,\n    disabled?: boolean\n}\n\nexport const SelectInputStream: React.FC<SelectInputStreamProps> = ({\n    inputs, setSelectedInput, disabled\n}) => {\n    const [ selected, setSelected ] = useState(inputs[0]);\n\n    useEffect(() => {\n        setSelectedInput(selected);\n    }, [selected]);\n\n    return (\n        <StyledSelect\n            items={inputs}\n            renderF={(item: MediaDeviceInfo, selected: boolean) => (\n                <span\n                    className={classNames(\n                        selected ? 'font-semibold' : 'font-normal', \n                        'ml-3 block truncate'\n                    )}\n                >\n                    { item.label || `Camera ${item.deviceId}` } \n                </span>\n            )}\n            keyF={(item: MediaDeviceInfo) => item.deviceId}\n            onChange={setSelected}\n            label={<Header size=\"sm\"> Select input device </Header>}\n            disabled={disabled}\n        />\n    );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useModel, useWebcam, usePredictions, PredictionsRes } from '../hooks';\nimport { Header, StyledSwitch, SelectInputStream, CirclesSVG, CodeSnippet } from '../components';\nimport config from '../config';\nimport { circleSegments } from '../model/util';\nimport { useLocation } from 'react-router-dom';\n\ninterface HomeViewProps {\n    startedHook?: () => void,\n    taskDoneHook?: () => void,\n};\n\nexport const HomeView: React.FC<HomeViewProps> = ({ startedHook, taskDoneHook }) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    \n    const [ userReady, setUserReady ] = useState(false);\n\n    const [ mirrored, setMirrored ] = useState(false);\n    const [ activeDeviceId, setActiveDeviceId ] = useState<string | null>(null);\n\n    const { \n        videoInputs,\n        streamLoaded,\n        webcamElement,\n        webcamRef\n    } = useWebcam(mirrored, activeDeviceId ?? undefined);\n\n    const model = useModel();\n    const calcPrediction = usePredictions(webcamRef, model);\n\n    const segmentsRef = useRef(circleSegments(config.NUM_SEGMENTS));\n    const [ strokes, setStrokes ] = useState<string[]>([]);\n    const [ frameCount, setFrameCount ] = useState(0);\n    const [ ts, setTs ] = useState<number | null>(null);\n\n    const [ startedRecording, setStartedRecording ] = useState(false);\n    const [ stoppedRecording, setStoppedRecording ] = useState(false);\n    const [ mediaRecorder, setMediaRecorder ] = useState<MediaRecorder | null>(null);\n    const [ recordedBlobs, setRecordedBlobs ] = useState<Blob[]>([]);\n    const [ blobsUploading, setBlobsUploading ] = useState(false);\n    const [ blobsUploaded, setBlobsUploaded ] = useState(false);\n    const [ blobsUploadError, setBlobsUploadError ] = useState<string | null>(null);\n\n    const location = useLocation();\n    const key = new URLSearchParams(location.search).get('key');\n    const lang = new URLSearchParams(location.search).get('language') ?? 'en';\n\n    const updateCircleProps = (prediction?: PredictionsRes | null) => {\n        if (!prediction)\n            return;\n        \n        const {\n            predictions,\n            confidence,\n            boundingBox,\n            keypointsReduced,\n            target,\n            angles\n        } = prediction;\n\n        const { yaw, pitch, roll } = angles;\n        const segments = segmentsRef.current!;\n        \n        const norm = Math.sqrt(yaw * yaw + pitch * pitch);\n        const xNorm = yaw / norm;\n        const yNorm = pitch / norm;\n        let poseAngle = Math.atan2(xNorm, yNorm);\n\n        if (poseAngle < 0) {\n            poseAngle += 2 * Math.PI;\n        }\n\n        if (norm > config.MIN_POSITION && norm < config.MAX_POSITION) {\n            segments.forEach((value, key) => {\n                if (key.start < poseAngle && poseAngle < key.end && segments.get(key) != true)\n                    segments.set(key, true);\n            });\n        }\n\n        let strokes: string[] = []; \n        segments.forEach((value, key) => {\n            strokes[key.index] = \n                (key.start < poseAngle && poseAngle < key.end && norm > config.MIN_POSITION && norm < config.MAX_POSITION)\n                    ? \"blue\"\n                    : value === true ? \"red\" : \"green\";\n        });\n        setStrokes(strokes);\n    };\n\n    const updateLandmarks = (prediction?: PredictionsRes | null) => {\n        const width = containerRef.current?.offsetWidth ?? 0;\n        const height = containerRef.current?.offsetHeight ?? 0;\n\n        if (canvasRef.current !== null) {\n            const canvas = canvasRef.current;\n            // console.log(canvas.width, canvas.height);\n            if (canvas.height !== height || canvas.width !== width) {\n                canvas.height = height;\n                canvas.width = width;\n            }\n        }\n\n        if (prediction === undefined)\n            return;\n\n        const ctx = canvasRef.current?.getContext('2d');\n        const video = webcamRef.current?.getCanvas();\n        if (!ctx || !video) {\n            return;\n        }\n\n        if (mirrored) {\n            ctx.scale(-1, 1);\n        }\n\n        ctx.clearRect(0, 0, width, height);\n        ctx.fillStyle = \"#32EEDB\";\n        const scaleX = width / video.width;\n        const scaleY = height / video.height;\n\n        if (prediction === null || prediction.confidence <= config.CONFIDENCE_RATE) {\n            return;\n        }\n        \n        prediction.keypointsReduced.forEach((landmark) => {\n            const x = mirrored ? width - landmark[0] * scaleX : landmark[0] * scaleX;\n            const y = landmark[1] * scaleY;\n            \n            // console.log(x, y);\n            ctx.beginPath();\n            ctx.arc(x, y, 1 /* radius */, 0, 2 * Math.PI);\n            ctx.fill();\n        });\n    };\n\n    const checkDone = () => {\n        if (!segmentsRef.current)\n            return false;\n        \n        return Array.from(segmentsRef.current.values()).every(x => x);\n    };\n\n    const downloadVideo = () => {\n        const blob = new Blob(recordedBlobs, { type: 'video/webm' });\n\n        setBlobsUploading(true);\n        fetch(`${config.s3url}/${key}.webm`, {\n            method: 'PUT',\n            body: blob,\n            headers: {\n                'Content-Type': 'video/webm'\n            }\n        })\n            .then(resp => {\n                setBlobsUploaded(true);\n                taskDoneHook && taskDoneHook();\n            })\n            .catch(err => setBlobsUploadError(err));\n    };\n\n    const updatePredictions = async () => {\n        const res = await calcPrediction();\n        if (res !== null) {\n            setTs(prev => prev === null ? Date.now() : prev);\n            updateCircleProps(res);\n            // updateLandmarks(res);\n            setFrameCount(prev => prev + 1);\n            \n            if (!checkDone())\n                requestAnimationFrame(updatePredictions);\n            else \n                setStoppedRecording(true);\n        }\n    };\n\n    useEffect(() => {\n        if (userReady && streamLoaded) {\n            setTimeout(updatePredictions, 1500);\n            startedHook && setTimeout(startedHook, 1500);\n        }\n    }, [streamLoaded, userReady]);\n\n    useEffect(() => {\n        if (ts !== null && !startedRecording)\n            setStartedRecording(true);\n    }, [ts]);\n\n    useEffect(() => {\n        if (startedRecording)\n            setMediaRecorder(new MediaRecorder(webcamRef.current!.stream!, { mimeType: 'video/webm' }));\n    }, [startedRecording]);\n\n    useEffect(() => {\n        if (stoppedRecording) {\n            mediaRecorder?.stop();\n            setTimeout(downloadVideo, 1000);\n        }\n    }, [stoppedRecording]);\n\n    useEffect(() => {\n        mediaRecorder?.addEventListener('dataavailable', (e) => {\n            setRecordedBlobs(prev => [ ...prev, e.data ]);\n        });\n\n        mediaRecorder?.start(1000);\n    }, [mediaRecorder]);\n\n    if (!key)\n        return <span> Not found </span>;\n\n    if (!videoInputs || videoInputs.length === 0)\n        return <span> No video input devices were found :( </span>;\n        \n    if (blobsUploaded)\n        return <span> Congratulations! Here's your key: <CodeSnippet text={btoa(atob(key) + '|>*<|' + 'aaaaa')}/> </span>\n\n    if (blobsUploading && !blobsUploaded)\n        return <span> Please wait, we will give you your submission key shortly... </span>;\n    \n    const video = webcamRef.current?.getCanvas();\n    const videoW = video?.width ?? 0;\n    const videoH = video?.height ?? 0;\n    const videoRatio = videoW / videoH;\n    const containerW = containerRef.current?.offsetWidth ?? 0;\n    const containerH = containerW / videoRatio;\n    const webcamSize = \n        videoRatio > 1\n            ? containerH\n            : containerW;\n\n    return (\n        <div className=\"grid grid-cols-2 rounded overflow-hidden text-sm\">\n            <div className=\"lg:col-span-1 col-span-2 relative\">\n                {\n                    userReady ?\n                    <>\n                        <div ref={containerRef} className=\"relative w-full flex items-center justify-center\"> \n                            <div \n                                style={{\n                                    width: webcamSize + 50,\n                                    height: webcamSize + 50,\n                                    marginLeft: (containerW - webcamSize) / 2 - 20,\n                                    marginTop: (containerH - webcamSize) / 2 - 20,\n                                }}\n                                className=\"absolute left-0 top-0 z-10\"\n                            >\n                                <CirclesSVG\n                                    strokes={strokes}\n                                    numberSegments={config.NUM_SEGMENTS}\n                                    key={JSON.stringify(strokes)}\n                                    size={webcamSize + 40}\n                                /> \n                            </div>\n                            <div style={{ width: webcamSize, height: webcamSize }} className=\"relative rounded-full overflow-hidden\">\n                                <div \n                                    style={{ \n                                        width: videoRatio > 1 ? containerW : 'auto',\n                                        marginLeft: videoRatio > 1 ? (webcamSize - containerW) / 2 : 0,\n                                        height: videoRatio <= 1 ? containerH : 'auto',\n                                        marginTop: videoRatio <= 1 ? (webcamSize - containerH) / 2 : 0, \n                                    }} \n                                    className=\"absolute left-0 top-0\"\n                                >\n                                    { webcamElement } \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-full z-10 absolute top-0 left-0\">\n                            <canvas ref={canvasRef} />\n                        </div>\n                    </>\n                    :\n                    <div \n                        className=\"w-full h-full bg-gray-600 text-gray-100 flex items-center justify-center cursor-pointer\"\n                        onClick={() => setUserReady(true)}\n                    >\n                        <div>\n                            <Header size=\"sm\"> Click here when you're ready </Header>\n                        </div>\n                    </div>\n                }\n            </div>\n            <div \n                className=\"lg:col-span-1 col-span-2 bg-gray-100 p-6 relative overflow-y-scroll\"\n                style={{\n                    height: containerRef.current?.offsetHeight ?? 'auto'\n                }}\n            >\n                <ul className=\"space-y-4\">\n                    <li key=\"selectInputStream\">\n                        <SelectInputStream \n                            inputs={videoInputs}\n                            setSelectedInput={(item: MediaDeviceInfo) => setActiveDeviceId(item.deviceId)}\n                            disabled={userReady}\n                        />\n                    </li>\n                    <li key=\"mirroredSwitch\">\n                        <ul className=\"flex items-center\">\n                            <li>\n                                <Header className=\"text-gray-700 dark:text-gray-100\" size=\"sm\"> Mirror image </Header>\n                            </li>\n                            <li className=\"pl-2\">\n                                <StyledSwitch \n                                    defaultEnabled \n                                    onChange={setMirrored}\n                                    size={20} \n                                    disabled={userReady}\n                                />\n                            </li>\n                        </ul>\n                    </li>\n                    <li>\n                        <Header size=\"sm\"> FPS: </Header>\n                        { ts ? Math.round(frameCount / (Date.now() - ts!) * 1000) : \"None\" }\n                    </li>\n                    <li className=\"flex justify-center\">\n                        {/* {\n                            ts !== null ?\n                            <CirclesSVG \n                                strokes={strokes}\n                                numberSegments={config.NUM_SEGMENTS}\n                                key={JSON.stringify(strokes)}\n                                size={500}\n                            /> : <></>\n                        } */}\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n}\n","import { AnnotatedPrediction, MediaPipeFaceMesh } from '@tensorflow-models/face-landmarks-detection/dist/mediapipe-facemesh';\nimport { Coord2D, Coords3D } from '@tensorflow-models/face-landmarks-detection/dist/mediapipe-facemesh/util';\nimport config from '../config';\nimport { selectItems, source, getAngles } from '../model/util';\nimport * as mlMatrix from \"ml-matrix\";\nimport React from 'react';\nimport Webcam from 'react-webcam';\n\nexport interface PredictionsRes {\n    predictions: AnnotatedPrediction[],\n    confidence: number,\n    boundingBox: {\n        topLeft: Coord2D;\n        bottomRight: Coord2D;\n    },\n    keypointsReduced: number[][],\n    target: mlMatrix.Matrix,\n    angles: {\n        yaw: number,\n        pitch: number,\n        roll: number\n    }\n}\n\nexport const usePredictions = (\n    input: React.RefObject<Webcam>, \n    model: MediaPipeFaceMesh | null\n) => {\n\n    return async (): Promise<PredictionsRes | null | undefined> => {\n        if (!input.current || !input.current.video)\n            return null;\n        \n        const predictions = await model?.estimateFaces({\n            input: input.current.video,\n            returnTensors: false,\n            flipHorizontal: false, \n            predictIrises: false\n        });\n\n        if (!predictions || predictions.length === 0)\n            return undefined;\n\n        const confidence = predictions[0].faceInViewConfidence;\n        const keypoints = predictions[0].scaledMesh;\n        const boundingBox = predictions[0].boundingBox as { topLeft: Coord2D; bottomRight: Coord2D; };\n        const keypointsReduced = selectItems(keypoints as Coords3D, config.index);\n        const target = new mlMatrix.Matrix(keypointsReduced);\n        const angles = getAngles(source, target);\n\n        return {\n            predictions,\n            confidence,\n            boundingBox,\n            keypointsReduced,\n            target,\n            angles\n        };\n    };\n}\n","import React, { useState } from 'react';\nimport { useTimer, useVideoPermissions, PermissionsState } from '../hooks'; \nimport config from '../config';\nimport { HomeView } from './HomeView';\nimport './progress-bar.css';\n\n\nexport const DefaultView: React.FC = () => {\n    const permissions = useVideoPermissions();\n    const { \n        startTimer, timedOut, timeLeft, timerStarted \n    } = useTimer(config.timerLimit);\n    const [ taskDone, setTaskDone ] = useState(false);\n\n    return (\n    <div className=\"w-full h-full dark:bg-gray-700\">\n        <div className=\"z-0 w-full max-w-screen-xl mx-auto px-6\">\n            <div className=\"pb-16 w-full pt-28\"> \n                <div className=\"w-full h-2 bg-gray-200 rounded-full mb-4 relative overflow-hidden\">\n                    { timerStarted ?\n                    <div \n                        className=\"absolute top-0 left-0 h-full w-0 bg-indigo-600\" \n                        style={{\n                            animation: `progress-bar-grow ${config.timerLimit}s linear`\n                        }}\n                    />\n                    : null}\n                </div>\n                {\n                    !timedOut && !taskDone ?\n                    (permissions === PermissionsState.NoResponse ?\n                    \"Please allow the usage of camera\" : permissions === PermissionsState.Success ?\n                    <HomeView startedHook={() => startTimer()} taskDoneHook={() => setTaskDone(true)}/> : permissions === PermissionsState.Denied ?\n                    \"Couldn't get camera video stream, please check that you permitted usage of video camera\" :\n                    \"\") : \n                    \"You ran out of time, please try again\"\n                }\n            </div>\n        </div>\n    </div>\n    );\n}\n","import { useState, useEffect } from 'react';\n\nexport const useTimer = (seconds: number) => {\n    const [ timerStarted, setTimerStarted ] = useState(false);\n    const [ timedOut, setTimedOut ] = useState(false);\n    const [ timer, setTimer ] = useState<number | null>(null);\n    const [ timeStarted, setTimeStarted ] = useState(0);\n\n    useEffect(() => {\n        return () => {\n            timer && clearTimeout(timer);\n        };\n    }, []);\n\n    useEffect(() => {\n        if (!timerStarted)\n            return;\n        \n        setTimeStarted(Date.now());\n        setTimer(\n            window.setTimeout(() => {\n                setTimedOut(true);\n            }, seconds * 1000)\n        );\n    }, [timerStarted])\n\n    const startTimer = () => {\n        setTimerStarted(true);\n    };\n\n    const timeLeft = () => \n        timeStarted / 1000 + seconds - Date.now() / 1000;\n\n    return { startTimer, timedOut, timeLeft, timerStarted };\n};\n","import React from 'react';\nimport { DefaultView } from '../views';\n\nexport const HomeRoute: React.FC = () => {\n    return (\n        <DefaultView />\n    );\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { HomeRoute } from './routes';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={HomeRoute} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}